;; Ryen's emacs config

;; MELPA
(setq package-archives '(("gnu" . "http://elpa.gnu.org/packages/")
			 ("marmalade" . "http://marmalade-repo.org/packages/")
			 ("melpa" . "http://melpa.org/packages/")))

;; Set load path
(let ((default-directory "~/.emacs.d/"))
  (normal-top-level-add-subdirs-to-load-path))

;; emacs path
(setenv "PATH" (concat (getenv "PATH") ":/Users/ryen/.npm-packages/bin"))
(setq exec-path (append exec-path '("/Users/ryen/.npm-packages/bin")))

;; backups
(setq backup-directory-alist `(("." . "~/.saves")))
(setq backup-by-copying t)

;; switch
(c-set-offset 'case-label '+)

;; Appearance

(fset 'yes-or-no-p 'y-or-n-p)  ;; only type `y` instead of `yes`
(setq inhibit-splash-screen t) ;; no splash screen
;; (setq-default indent-tabs-mode nil) ;; no tabs!
;; (menu-bar-mode -1) ;; minimal chrome
;; (tool-bar-mode -1) ;; no toolbar
(x-focus-frame nil) ;; Display on top when opened from command line
(global-linum-mode t)

(add-to-list 'load-path "~/.emacs.d/packages/neotree")
(require 'neotree)
(global-set-key (kbd "C-x C-d") 'neotree-toggle)

;; JsDoc
(add-to-list 'load-path "~/.emacs.d/packages/js-doc")
(require 'js-doc)

(setq js-doc-mail-address "your email address"
       js-doc-author (format "your name <%s>" js-doc-mail-address)
       js-doc-url "url of your website"
       js-doc-license "license name")

 (add-hook 'js2-mode-hook
           #'(lambda ()
               (define-key js2-mode-map "\C-ci" 'js-doc-insert-function-doc)
               (define-key js2-mode-map "@" 'js-doc-insert-tag)))

;; Backups
(setq backup-directory-alist `(("." . "~/.saves")))
(setq backup-by-copying t)

;; Tabs
(setq-default indent-tabs-mode nil)
(setq-default tab-width 4)
(setq indent-line-function 'insert-tab)

(add-to-list 'default-frame-alist '(font . "PT-Mono-14"))
(set-face-attribute 'default t :font "PT-Mono-14")

;; Plugins

;; Flycheck
(require 'flycheck)
(add-hook 'after-init-hook #'global-flycheck-mode)
(setq-default flycheck-disabled-checkers
  (append flycheck-disabled-checkers
    '(javascript-jshint)))
(flycheck-add-mode 'javascript-eslint 'web-mode)
(setq-default flycheck-temp-prefix ".flycheck")
(setq-default flycheck-disabled-checkers
  (append flycheck-disabled-checkers
    '(json-jsonlist)))

;; Web Mode
(require 'web-mode)
(add-to-list 'auto-mode-alist '("\\.jsx$" . web-mode))

;; adjust indents for web-mode to 2 spaces
(defun my-web-mode-hook ()
  (setq web-mode-markup-indent-offset 2)
  (setq web-mode-css-indent-offset 2)
  (setq web-mode-code-indent-offset 2))
(add-hook 'web-mode-hook  'my-web-mode-hook)

(defadvice web-mode-highlight-part (around tweak-jsx activate)
  (if (equal web-mode-content-type "jsx")
    (let ((web-mode-enable-part-face nil))
      ad-do-it)
    ad-do-it))

(require 'emmet-mode)

;; js mode
(setq js-indent-level 2)

;; autopair
(require 'autopair)
(autopair-global-mode)

;; Emmet config
(add-to-list 'load-path "~/emacs.d/packages/emmet-mode")
(add-hook 'sgml-mode-hook 'emmet-mode) ;; Auto-start on any markup modes
(add-hook 'js-mode-hook 'emmet-mode) ;; Auto-start on any markup modes
(add-hook 'css-mode-hook  'emmet-mode)
(add-hook 'emmet-mode-hook (lambda () (setq emmet-indentation 2))) ;; indent 2 spaces.
(setq emmet-expand-jsx-className? t) ;; default nil)    
(setq emmet-self-closing-tag-style " /") ;; default "/"
(setq emmet-move-cursor-between-quotes t)
(setq emmet-move-cursor-after-expanding t)
(define-key emmet-mode-keymap [tab] 'emmet-expand-line)

(load-theme 'leuven t)
;; (add-to-list 'custom-theme-load-path "~/.emacs.d/themes")

(setq whitespace-action '(auto-cleanup))
(setq whitespace-style '(trailing space-before-tab indentation empty space-after-tab))
