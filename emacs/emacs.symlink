;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Section I: Generic settings                                               ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; The following 3 lines disable unnecessary GUI elements, in this case the
;; menu bar, the tool bar and the scroll bar. If you wish, you can comment out
;; the menu-bar and keep it, but eventually I recommend you disable it.

(if (fboundp 'menu-bar-mode) (menu-bar-mode -1))
(if (fboundp 'tool-bar-mode) (tool-bar-mode -1))
(if (fboundp 'scroll-bar-mode) (scroll-bar-mode -1))

;; Sometimes the mini-buffer becomes multi-line, and it can be a bit annoying as
;; you type in it. This makes it stay one line.

(setq resize-mini-windows nil)

;; We don't need the Emacs splash screen. You can keep it on if you're into
;; that sort of thing

;; (setq inhibit-splash-screen t)

;;; global-linum-mode adds line numbers to all open windows, In my opinion
;;; there is no reason not to have this enabled.

(global-linum-mode)

;;; Emacs comes with a built-in text based browser. Since I use the browse-url
;;; function most often to browse documentation, I've set it to eww, the Emacs
;;; Web Browser. It works well for that purpose. If you would prefer to use a
;;; graphical browser, you can change this line.

(setq browse-url-browser-function 'eww-browse-url)

;; Show matching parentecies globaly.

(show-paren-mode 1)

;; Use UTF-8 by default
(set-language-environment "UTF-8")

;; Don't ring the bell. It saves some annoyance

(setq ring-bell-function 'ignore)

;; If you're one of the heathens who prefers tabs over spaces, you should
;; remove the following line. It makes indentation use spaces.
(setq-default indent-tabs-mode nil)

;;; A simple backup setup. Makes sure I don't foo~ and #.foo files in
;;; directories with files you edit.

(setq
 backup-by-copying t      ; don't clobber symlinks-
 backup-directory-alist
 '(("." . "~/.saves"))    ; don't litter my fs tree
 auto-save-file-name-transforms
 `((".*" ,temporary-file-directory t))
 delete-old-versions t
 kept-new-versions 6
 kept-old-versions 2
 version-control t)       ; use versioned backups


;; Set up emacs server. This allows you to run emacs in the background and
;; connect to it with emacs client. It reduces startup time significantly. If
;; the server is not running, it starts it.

(load "server")

(unless (server-running-p)
  (server-start))

;;; ido-mode, or Interactively DO mode, adds lots of improvements when working
;;; with buffers of files. You can read more about it at:
;;; https://www.emacswiki.org/emacs-test/InteractivelyDoThings
(require 'ido)
(setq ido-enable-flex-matching t)
(setq ido-everywhere t)
(ido-mode 1)
(setq ido-use-filename-at-point 'guess)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Section II: Packages                                                      ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; Elpa, the default package repository for emacs is fairly conservative, so
;; we'll add the melpa and marbaraie repositories
(require 'package)
(add-to-list 'package-archives
  '("marmalade" . "http://marmalade-repo.org/packages/"))

(add-to-list 'package-archives
  '("melpa" . "http://melpa.org/packages/") t)

;; You can install packages by typing M-x package-install <package-name>. I
;; recomend you install the following packages: smex, which adds an improved
;; version of M-x. I highly recomend this. You can read more about smex at:
;; https://github.com/nonsequitur/smex/

;; Another ofthen used mode is magit, which is an interface to git, allowing
;; you to manage your repos through emacs. You can read more about it at:
;; http://magit.vc/ It is one of the most useful modes available for emacs

(setq package-selected-packages
  '(async
  epl
  ;; evil
  goto-chg
  ;; helm
  ;; helm-ag
  ;; helm-core
  ;; helm-descbinds
  ;; helm-projectile
  pkg-info
  ;; indium
  js-mode
  js2-mode
  popup
  projectile
  undo-tree
  auto-complete
  base16-theme
  rainbow-delimiter
  elscreen
  projectile
  powerline
  git-gutter
  smartparens
  flycheck
  ;; js3-mode
  linum-relative))

(package-initialize)  
(package-install-selected-packages)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Section III: Global Key Bindings                                          ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; By default C-x o is bound to 'other window, but I find I use it much more
;; ofther than open-line, which is bound to C-o, so I swap their definitions
;; (global-set-key (kbd "C-o") 'other-window)
;; (global-set-key (kbd "C-x o") 'open-line)

;; M-0..3 are bound to 'digit-argument. To be used with C-u. I don't use them
;; ofthen, so I prefer to rebind them to the window commands, since M-1 is
;; easyer to type than C-x 1. 
(global-set-key (kbd "M-1") 'delete-other-windows)
(global-set-key (kbd "M-2") 'split-window-vertically)
(global-set-key (kbd "M-3") 'split-window-horizontally)
(global-set-key (kbd "M-0") 'delete-window)

;; Set the enter key to newline-and-indent which inserts a new line and then
;; indents according to the major mode. This is very convenient. 
(global-set-key (kbd "<RET>") 'newline-and-indent)

;; If you have installed smex with M-x package-install smex, you can uncomment
;; the following lines. To activate it without restarting Emacs select the
;; lines and type M-x eval-region:

;; (require 'smex)

;; (global-set-key (kbd "M-x") 'smex) 
;; (global-set-key (kbd "M-X") 'smex-major-mode-commands) 
;; (global-set-key (kbd "C-c C-c M-x") 'execute-extended-command)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Section IV: Appearance                                                    ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; Fullscreen
(custom-set-variables
 '(initial-frame-alist (quote ((fullscreen . maximized)))))

;; Theme (M-x customize-themes)
(load-theme 'base16-black-metal t)
(setq-default line-spacing 4)

;; Font
(set-default-font "Space Mono")

;; Font Size
;; (set-face-attribute 'default nil :height 95)

; AB
;; (require 'powerline)
;; (powerline-default-theme)

;; (require 'git-gutter)
;; (global-git-gutter-mode t)


;; Projectile
(require 'projectile)
(projectile-mode 1)
(setq projectile-project-search-path '("~/Workbench/"))
(define-key projectile-mode-map (kbd "C-c p") 'projectile-command-map)

;; Indium
(require 'indium)

;; JS Mode
(require 'js2-mode)
(add-hook 'js-mode-hook 'js2-minor-mode) 
;; (add-to-list 'auto-mode-alist '("\\.js\\'" . js2-mode))
;; (setq js2-mode-show-parse-errors nil
;;         js2-mode-show-strict-warnings nil
;;         js2-basic-offset 2
;;         js-indent-level 2)

;; Better imenu
;; (add-hook 'js2-mode-hook #'js2-imenu-extras-mode)

;; Parens
;; (show-paren-mode 1)

;; (electric-pair-mode 1)
;; (defun my-electric-pair-post-self-insert-function (orig-fun)
;;   (let ((indent-after (and (eq last-command-event ?\n)
;;                            (< (1+ (point-min)) (point) (point-max))
;;                            (eq (save-excursion
;;                                  (skip-chars-backward "\t\s")
;;                                 ;;  (char-before (1- (point)
;;                                  )))
;;                                (matching-paren (char-after))))))
;;     (apply orig-fun nil)
;;     (when indent-after
;;       (indent-according-to-mode)
;;       (save-excursion
;;         (forward-line 1)
;;         (indent-according-to-mode)))))
;; (advice-add 'electric-pair-post-self-insert-function :around #'my-electric-pair-post-self-insert-function)
(require 'smartparens-config)

;; Always start smartparens mode in js-mode.
(add-hook 'js-mode-hook #'smartparens-mode)